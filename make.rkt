#lang racket/base

(require dynext/compile racket/file)

(define java-home (getenv "JAVA_HOME"))
(define arch      (getenv "ARCH"))

(unless (and java-home (not (string=? java-home "")))
  (error "ERROR: JAVA_HOME environment variable not set"))

(unless (and arch (not (string=? arch "")))
  (error "ERROR: ARCH environment variable not set"))

(define includes
  (list
   (build-path java-home "include")
   (build-path java-home "include" "linux")))

(define libs
  (list
   "-ljava"
   (format "-L~a" (build-path java-home "jre" "lib" arch))
   (format "-L~a" (build-path java-home "jre" "lib" arch "server"))))
  
(current-extension-compiler-flags (list* "-fPIC" "-shared" "-O3" libs))

(define (pre-installer top home)
  (define bindings-path (build-path home "bindings"))
  ; delete bindings cache if it exists, it may have bindings generated by an old version
  ; which are incompatible with the current version
  (when (directory-exists? bindings-path)
    (delete-directory/files bindings-path))
  (make-directory bindings-path)
  (compile-extension #f (build-path home "jrffi.c")  (build-path home "jrffi.so") includes))

(provide pre-installer)
